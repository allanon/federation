scalar Location

type Query {
  sender: SendingUser
  receiver: ReceivingUser
  field: SomeField
}

type SendingUser @key(fields: "id")
{
  id: ID!
  name: String
  address: String
  location: Location
}

type ReceivingUser @key(fields: "id")
{
  id: ID!
  name: String
  address: String
  location: Location
}

interface IFace {
  x: Int
}

type IFaceImpl1 implements IFace { x: Int }
type IFaceImpl2 implements IFace { x: Int }

type SomeField {
  a: A
  b: B
  iface: IFace
}

type A {
  b: B
}

type B {
  f1: String
  f2: String
  f3: String
  f4: String
  f5: String
  f6: String
}
